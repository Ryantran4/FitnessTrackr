{"ast":null,"code":"var _jsxFileName = \"/Users/ryantran/fitness-dev-frontend/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { useContext } from 'react';\nimport { UserContext } from '../context/UserContext';\nimport { register } from '../utils/CallApi';\nimport { Card, CardContent, Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  REACT_APP_BASE_URL\n} = process.env;\n\nconst Register = () => {\n  _s();\n\n  const {\n    isLoggedIn,\n    setIsLoggedIn,\n    setUserToken,\n    setUser\n  } = useContext(UserContext);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const params = useParams();\n  const history = useHistory();\n  console.log('params: ', params);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: params.method\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"logform\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: async event => {\n          event.preventDefault();\n          const fetchUrl = `${REACT_APP_BASE_URL}/users/${params.method}`;\n\n          if (params.method == 'register') {\n            const registerData = await register({\n              username: username,\n              password: password\n            });\n\n            if (registerData && !registerData.name) {\n              localStorage.setItem(\"userToken\", registerData.token);\n              setUserToken(registerData.token);\n              setIsLoggedIn(true);\n              setUser(username);\n            } else {\n              alert('failed');\n            }\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          id: \"logcard\",\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"username\",\n              onChange: event => setUsername(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"password\",\n              onChange: event => setPassword(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), params.method === 'Register' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"logintext\",\n          children: \"Register Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 48\n        }, this) : '', /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"40RcO5xvLTaeI+NwZaJ0vi2nO+c=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/ryantran/fitness-dev-frontend/src/components/Register.js"],"names":["React","useState","useParams","useHistory","useContext","UserContext","register","Card","CardContent","Button","REACT_APP_BASE_URL","process","env","Register","isLoggedIn","setIsLoggedIn","setUserToken","setUser","username","setUsername","password","setPassword","params","history","console","log","method","event","preventDefault","fetchUrl","registerData","name","localStorage","setItem","token","alert","target","value"],"mappings":"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","sourcesContent":["\nimport React, {useState} from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { useContext } from 'react';\nimport { UserContext } from '../context/UserContext';\nimport { register } from '../utils/CallApi';\nimport { Card, CardContent,Button } from \"@material-ui/core\"\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nconst Register = () => {\n    const {isLoggedIn, setIsLoggedIn, setUserToken, setUser} = useContext(UserContext)\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const params = useParams();\n    const history = useHistory();\n    console.log('params: ', params);\n\n\n    return<>\n        <h1>{params.method}</h1>\n        <div id = \"logform\">\n        <form onSubmit={async (event) => {\n            event.preventDefault();\n            const fetchUrl = `${REACT_APP_BASE_URL}/users/${params.method}`\n\n        if (params.method=='register') {\n            const registerData = await register({username:username, password:password})\n            if(registerData && !registerData.name) {\n                localStorage.setItem(\"userToken\", registerData.token);\n                setUserToken(registerData.token)\n                setIsLoggedIn(true)\n                setUser(username)\n            }else{\n                alert('failed')\n            }\n        }\n\n        }}>\n            <Card id = \"logcard\">\n            <CardContent><input type=\"text\" placeholder=\"username\"\n            onChange={(event)=> setUsername(event.target.value)}></input>\n            <hr></hr>\n            <input type=\"password\" placeholder=\"password\" \n            onChange={(event)=> setPassword(event.target.value)}></input>\n            <hr></hr></CardContent>\n            </Card>\n            {\n                params.method === 'Register' ? <div id=\"logintext\">Register Input</div> : ''\n            }\n\n        <Button variant='contained'>Submit</Button>\n\n        </form>\n        </div>\n    </>\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}