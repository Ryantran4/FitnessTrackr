{"ast":null,"code":"var _jsxFileName = \"/Users/ryantran/fitness-dev-frontend/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react'; // import { useParams, useHistory } from 'react-router';\n\nimport { callApi } from '../CallApi';\nimport { UserContext } from '../UserContext'; // import { UserProvider } from '../UserContext';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  REACT_APP_BASE_URL\n} = process.env;\n\nconst Register = () => {\n  _s();\n\n  const {\n    setToken\n  } = useContext(UserContext);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState(''); // const params = useParams();\n  // const history = useHistory();\n  // console.log('params: ', params);\n\n  const userRegister = async () => {\n    try {\n      const response = await callApi({\n        url: \"/users/register\",\n        method: \"POST\",\n        body: {\n          username,\n          password\n        }\n      });\n      console.log(response);\n\n      if (response) {\n        setToken(response.data.token);\n\n        if (response.data.token) {\n          setToken(\"\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const usernameHandler = event => {\n    setUsername(event.target.value);\n  };\n\n  const passwordHandler = event => {\n    setPassword(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault(); //stops page from refreshing\n\n    userRegister(); //function goes off to send information back to the api\n\n    setUsername(\"\"); //onSubmit sets username to an empty string\n\n    setPassword(\"\"); //onSubmit also sets the password to an empty string\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Register Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"username\",\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          value: username,\n          onChange: usernameHandler,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"password\",\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          value: password,\n          onChange: passwordHandler,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"VcxJTW/rOE/RLbwZE5Pw1qq+dHk=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/ryantran/fitness-dev-frontend/src/components/Register.js"],"names":["React","useState","useContext","callApi","UserContext","REACT_APP_BASE_URL","process","env","Register","setToken","username","setUsername","password","setPassword","userRegister","response","url","method","body","console","log","data","token","error","usernameHandler","event","target","value","passwordHandler","submitHandler","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\n// import { useParams, useHistory } from 'react-router';\nimport { callApi } from '../CallApi';\nimport { UserContext } from '../UserContext';\n// import { UserProvider } from '../UserContext';\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nconst Register = () => {\n    const {setToken} = useContext(UserContext);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    // const params = useParams();\n    // const history = useHistory();\n    // console.log('params: ', params);\n    const userRegister = async () => {\n        try {\n            const response = await callApi({\n                url: \"/users/register\",\n                method: \"POST\",\n                body: {\n                    username,\n                    password\n                }\n            });\n            console.log(response)\n            if (response) {\n                setToken(response.data.token)\n                if (response.data.token) {\n                    setToken(\"\");\n                }\n            }\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n\n    const usernameHandler = (event) => {\n        setUsername(event.target.value);\n    }\n\n    const passwordHandler = (event) => {\n        setPassword(event.target.value);\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault(); //stops page from refreshing\n\n        userRegister(); //function goes off to send information back to the api\n\n        setUsername(\"\") //onSubmit sets username to an empty string\n        setPassword(\"\") //onSubmit also sets the password to an empty string\n    }\n\n    return(\n        <>\n            <form onSubmit={submitHandler}>\n                <h3>Register Page</h3>\n                <div>\n                    <TextField\n                        label=\"username\"\n                        id=\"outlined-basic\"\n                        variant=\"outlined\"\n                        value={username}\n                        onChange={usernameHandler}\n                        type=\"text\"\n                    />\n                </div>\n                <div>\n                    <TextField\n                        label=\"password\"\n                        id=\"outlined-basic\"\n                        variant=\"outlined\"\n                        value={password}\n                        onChange={passwordHandler}\n                        type=\"password\"\n                    />\n                </div>\n                <div>\n                    <Button color=\"primary\" variant=\"contained\" type=\"submit\">Submit</Button>\n                </div>\n            </form>\n        </>\n    )\n};\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}