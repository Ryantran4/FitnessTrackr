{"ast":null,"code":"const {\n  REACT_APP_BASE_URL\n} = process.env;\nexport const request = async ({\n  endpoint,\n  method,\n  body,\n  token\n}) => {\n  try {\n    let headers = {\n      'Content-Type': 'application/json'\n    };\n    if (token) headers['Authorization'] = `Bearer ${token}`;\n    let _request = {\n      method: method,\n      headers: headers\n    };\n    if (body) _request['body'] = JSON.stringify(body);\n    console.log(\"options\", _request);\n    const resp = await fetch(baseURL2 + endpoint, _request);\n    const data = await resp.json();\n    console.log('apiClient', data);\n    if (data.error) throw data.error;\n    return data ? data : null;\n  } catch (err) {\n    console.error(err);\n  } finally {}\n};\nexport const authenticate = async (endpoint, bodyData) => {\n  const data = await request({\n    endpoint: endpoint,\n    method: 'POST',\n    body: {\n      username: bodyData.username,\n      password: bodyData.password\n    }\n  });\n  return data;\n};\nexport const login = async bodyData => {\n  const endpoint = '/users/login';\n  const data = await authenticate(endpoint, bodyData);\n  return data;\n};\nexport const register = async bodyData => {\n  const endpoint = '/users/register';\n  const data = await authenticate(endpoint, bodyData);\n  return data;\n};\nexport const getMe = async token => {\n  const endpoint = '/users/me';\n  const data = await request({\n    endpoint: endpoint,\n    method: 'GET',\n    token: token\n  });\n  return data;\n};\nexport const getUserRoutinesWithToken = async (username, token) => {\n  const endpoint = `/users/${username}/routines`;\n  const data = await request({\n    endpoint: endpoint,\n    method: 'GET',\n    token: token\n  });\n  return data;\n};\nexport const getUserRoutines = async username => {\n  const endpoint = `/users/${username}/routines`;\n  const data = await request({\n    endpoint: endpoint,\n    method: 'GET'\n  });\n  return data;\n};\nexport const getMyRoutines = async token => {\n  try {\n    const user = await getMe(token);\n    const userRoutines = await getUserRoutinesWithToken(user.username, token);\n    return userRoutines;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getAllRoutines = async () => {\n  try {\n    const endpoint = `/routines`;\n    const data = await request({\n      endpoint: endpoint,\n      method: 'GET'\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getAllActivities = async () => {\n  try {\n    const endpoint = `/activities`;\n    const data = await request({\n      endpoint: endpoint,\n      method: 'GET'\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const postActivity = async (token, name, description) => {\n  try {\n    const endpoint = '/activities';\n    const data = await request({\n      endpoint: endpoint,\n      method: 'POST',\n      body: {\n        name,\n        description\n      },\n      token\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const postRoutine = async (token, name, goal, isPublic) => {\n  try {\n    const endpoint = '/routines';\n    const data = await request({\n      endpoint: endpoint,\n      method: 'POST',\n      body: {\n        name,\n        goal,\n        isPublic\n      },\n      token\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteRoutine = async (token, routineId) => {\n  try {\n    const endpoint = `/routines/${routineId}`;\n    const data = await request({\n      endpoint: endpoint,\n      method: 'DELETE',\n      token\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteRoutineActivity = async (token, routineActivityId) => {\n  try {\n    const endpoint = `/routine_activities/${routineActivityId}`;\n    const data = await request({\n      endpoint: endpoint,\n      method: 'DELETE',\n      token\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"sources":["/Users/ryantran/fitness-dev-frontend/src/utils/CallApi.js"],"names":["REACT_APP_BASE_URL","process","env","request","endpoint","method","body","token","headers","_request","JSON","stringify","console","log","resp","fetch","baseURL2","data","json","error","err","authenticate","bodyData","username","password","login","register","getMe","getUserRoutinesWithToken","getUserRoutines","getMyRoutines","user","userRoutines","getAllRoutines","getAllActivities","postActivity","name","description","postRoutine","goal","isPublic","deleteRoutine","routineId","deleteRoutineActivity","routineActivityId"],"mappings":"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","sourcesContent":["const { REACT_APP_BASE_URL} = process.env;\n\nexport const request = async ({endpoint, method, body, token})=>{\n    try{\n      let headers = {'Content-Type': 'application/json'}\n      if(token) headers['Authorization']=`Bearer ${token}`\n      let _request = {\n      method:method,\n      headers: headers,\n    }\n    if(body) _request['body']= JSON.stringify(body)\n    console.log(\"options\",_request)\n    const resp = await fetch(baseURL2+endpoint,_request)\n    const data = await resp.json()\n    \n    console.log('apiClient', data)\n    \n    if(data.error) throw(data.error)\n    return  data ? data : null\n\n    }\n    catch(err){\n      console.error(err)\n    }\n    finally{\n    }\n}\n\n\nexport const authenticate = async (endpoint, bodyData)=>{\n    const data = await request({\n        endpoint:endpoint,\n        method:'POST',\n        body: {\n          username:bodyData.username,\n          password:bodyData.password\n        }\n      })\n    return data\n}\n\n\nexport const login = async (bodyData)=>{\n    const endpoint = '/users/login'\n    const data = await authenticate(endpoint, bodyData)\n    return data\n}\n\n\nexport const register = async (bodyData)=>{\n    const endpoint = '/users/register'\n    const data = await authenticate(endpoint, bodyData)\n    return data\n}\n\nexport const getMe = async(token)=>{\n  const endpoint = '/users/me'\n  const data = await request({\n    endpoint:endpoint, \n    method:'GET',\n    token:token\n  })\n  return data\n}\n\nexport const getUserRoutinesWithToken= async(username, token)=>{\n  const endpoint = `/users/${username}/routines`\n  const data = await request({\n    endpoint:endpoint, \n    method:'GET',\n    token:token\n  })\n  return data\n}\n\nexport const getUserRoutines= async(username)=>{\n  const endpoint = `/users/${username}/routines`\n  const data = await request({\n    endpoint:endpoint, \n    method:'GET'\n  })\n  return data\n}\nexport const getMyRoutines = async (token) =>{\n  try{\n      const user = await getMe(token)\n      const userRoutines = await getUserRoutinesWithToken(user.username, token)\n      return userRoutines\n  }catch(error){\n      throw error\n  }\n}\n  export const getAllRoutines = async () =>{\n    try{\n      const endpoint = `/routines`\n      const data = await request({\n        endpoint:endpoint, \n        method:'GET',\n      })\n      return data\n    }catch(error){\n        throw error\n    }\n}\nexport const getAllActivities = async () =>{\n  try{\n    const endpoint = `/activities`\n    const data = await request({\n      endpoint:endpoint, \n      method:'GET',\n    })\n    return data\n  }catch(error){\n      throw error\n  }\n}\n\nexport const postActivity = async (token, name, description)=>{\n  try{\n    const endpoint = '/activities'\n    const data = await request({\n      endpoint:endpoint,\n      method:'POST',\n      body:{\n        name,\n        description\n      },\n      token\n    })\n    return data\n  }catch(error){\n    throw error\n  }\n}\n\nexport const postRoutine = async (token, name, goal, isPublic)=>{\n  try{\n    const endpoint = '/routines'\n    const data = await request({\n      endpoint:endpoint,\n      method:'POST',\n      body:{\n        name,\n        goal,\n        isPublic\n      },\n      token\n    })\n    return data\n  }catch(error){\n    throw error\n  }\n}\n\nexport const deleteRoutine = async (token, routineId)=>{\n  try{\n    const endpoint = `/routines/${routineId}`\n    const data = await request({\n      endpoint:endpoint,\n      method:'DELETE',\n      token\n    })\n    return data\n  }catch(error){\n    throw error\n  }\n}\nexport const deleteRoutineActivity = async (token, routineActivityId)=>{\n  try{\n    const endpoint = `/routine_activities/${routineActivityId}`\n    const data = await request({\n      endpoint:endpoint,\n      method:'DELETE',\n      token\n    })\n    return data\n  }catch(error){\n    throw error\n  }\n}\n"]},"metadata":{},"sourceType":"module"}